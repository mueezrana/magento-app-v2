<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
/* @var $this Mage_Core_Block_Template */
/* @var $$storelocatorHelper Mage_Catalogsearch_Helper_Data */
?>
<form>
    <div class="form-search">
       <input id="city" type="text" class="address-input-text" placeholder="您所在的城市" />
        <input id="address" type="text" class="address-input-text" placeholder="您的地址（例如：北京市海淀区上地十街十号）" />
        
        <label for="radiusSelect">查找半径</label>
        <select id="radiusSelect">
            <option value="25">25 km</option>
            <option value="100">100 km</option>
            <option value="200" selected>200 km</option>
        </select>
        
        <button type="button" title="Search" class="button" onclick="searchLocation()"><span><span>Search</span></span></button>
    </div>
</form>

<div class="map_container left">
    <div id="map" style="height: 400px"></div>
</div>

<div class="store_list right">
    <p class="loader" id="loading_mask_loader" style="display:none">
        <img src="<?php echo $this->getSkinUrl('images/ajax-loader-tr.gif') ?>" alt="<?php echo Mage::helper('storelocator')->__('Loading...') ?>"/>
        <br/>
        <?php echo Mage::helper('adminhtml')->__('Please wait...') ?>
    </p>
    <ul id="location" class="storelist"></ul>
</div>
    
<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=xvedUiOsv2sIGuG5Fuh0lk4D"></script>    
<script type="text/javascript">
    //<![CDATA[
        addEventListener("load", function() { load(); }, false);             
    //]]>
         
    var map;
    var markers = [];
    var infoWindow;
    var locationDiv;
    
    function onMouseover(markerNum) {
        markers[markerNum - 1].setAnimation(BMAP_ANIMATION_BOUNCE);
        setTimeout(function(){ markers[markerNum - 1].setAnimation(null); }, 750);
    }
    
    function onMouseout(markerNum) {
        markers[markerNum - 1].setAnimation(null);
    }

    function load() { 
    // 百度地图API功能
    map = new BMap.Map("map");
    var point = new BMap.Point(116.404, 39.915);
    map.centerAndZoom(point, 4);
    map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放
    
    locationDiv = document.getElementById("location");
    
    var searchUrl = '<?php echo Mage::getBaseUrl() ?>storelocator/index/search';
    downloadUrl(searchUrl, function(data) {
            var xml = parseXml(data);
            var markerNodes = xml.documentElement.getElementsByTagName("marker");

            for (var i = 0; i < markerNodes.length; i++) {
                var pt = new BMap.Point(parseFloat(markerNodes[i].getAttribute("lng")), parseFloat(markerNodes[i].getAttribute("lat")));
                var marker = new BMap.Marker(pt);  // 创建标注
                map.addOverlay(marker);              // 将标注添加到地图中
                markers[i] = marker;
            }
        });
   }

    function searchLocation() {
         clearLocations();    
        document.getElementById("loading_mask_loader").style.display = '';
    
        var address = document.getElementById("address").value;
        
        var city = document.getElementById("city").value;
        if(!address){ address = city; }
        // 创建地址解析器实例
        var myGeo = new BMap.Geocoder();
        // 将地址解析结果显示在地图上,并调整地图视野
        myGeo.getPoint(address, function(point){
            if (point) {
                searchLocationsNear(point.lat, point.lng);
            }else{
                document.getElementById("loading_mask_loader").style.display = 'none';
                alert('无法判断位置"' + address + '"!');
            }
        }, city);
    }
   
    function clearLocations() {
 //      infoWindow.close();
        for (var i = 0; i < markers.length; i++) {
            markers[i].remove(); 
        }
        markers.length = 0;
     
        locationDiv.innerHTML = "";
    }

    function searchLocationsNear(lat, lng) {
    //    var bounds = new google.maps.LatLngBounds();
    //    bounds.extend(center);
    //    map.setCenter(new google.maps.LatLng(center.lat(), center.lng())); 
    //    map.setZoom(8);
        clearLocations()
                
        var radius = document.getElementById('radiusSelect').value;
        var searchUrl = '<?php echo Mage::getBaseUrl() ?>storelocator/index/search?lat=' + lat + '&lng=' + lng + '&radius=' + radius;
        
        downloadUrl(searchUrl, function(data) {
            var xml = parseXml(data);
            var markerNodes = xml.documentElement.getElementsByTagName("marker");
            document.getElementById("loading_mask_loader").style.display = 'none';
                
            if (markerNodes.length == 0) {                
                var address = document.getElementById("address").value;
                map.clearOverlays(); 
                var opt = new BMap.Point(lng,lat);
                map.addOverlay(new BMap.Marker(opt));
                map.centerAndZoom(opt,7);
                var circle = new BMap.Circle(opt,radius*1000,{strokeColor:"blue", strokeWeight:1, strokeOpacity:0.9});
                map.addOverlay(circle);

                if(!address){ address = document.getElementById("city").value; }
                
                alert('在"' + address + '"附近' +  radius + 'km内没有商店');
                return;
            }
            
            for (var i = 0; i < markerNodes.length; i++) { 
            	map.clearOverlays();            
                var pt = new BMap.Point(parseFloat(markerNodes[i].getAttribute("lng")), parseFloat(markerNodes[i].getAttribute("lat")));
                var marker = new BMap.Marker(pt);  // 创建标注
                map.addOverlay(marker);              // 将标注添加到地图中

                var opt = new BMap.Point(lng,lat);
                map.addOverlay(new BMap.Marker(opt));
                map.centerAndZoom(opt,7);
                var circle = new BMap.Circle(opt,radius*1000,{strokeColor:"blue", strokeWeight:1, strokeOpacity:0.9});
                map.addOverlay(circle);
                               
                markers[i] = marker;                
                var id = markerNodes[i].getAttribute("id");
                var name = markerNodes[i].getAttribute("name");
                var address = markerNodes[i].getAttribute("address");
                var distance = parseFloat(markerNodes[i].getAttribute("distance"));
                listItem(id, name, address, distance, i);

            }
        });
    }

    function listItem(id, name, address, distance, num) {
        num = num + 1;
            
        element = document.createElement("li");
        var att = document.createAttribute("onmouseover");
        att.value = "onMouseover(" + num + ")";
        element.setAttributeNode(att);
        att = document.createAttribute("onmouseout");
        att.value = "onMouseout(" + num + ")";
        element.setAttributeNode(att); 
        element.innerHTML = '<h2>' + num + '. ' + name + '</h2><span class="distance">' + distance.toFixed(2) + ' km(s)</span><div class="clear"></div>';
        element.innerHTML += '<p>' + address + '</p>';
        element.innerHTML += '<a href="<?php echo Mage::getBaseUrl() ?>storelocator/index/detail/id/' + id + '">详细信息和驾车路线</a>';
        locationDiv.appendChild(element);
    }

    function downloadUrl(url, callback) {
        var request = window.ActiveXObject ? new ActiveXObject('Microsoft.XMLHTTP') : new XMLHttpRequest;

        request.onreadystatechange = function() {
            if (request.readyState == 4) {
                request.onreadystatechange = doNothing;
                callback(request.responseText, request.status);
            }
        };

        request.open('GET', url, true);
        request.send(null);
    }

    function parseXml(str) {
        if (window.ActiveXObject) {
            var doc = new ActiveXObject('Microsoft.XMLDOM');
            doc.loadXML(str);
            return doc;
        } else if (window.DOMParser) {
            return (new DOMParser).parseFromString(str, 'text/xml');
        }
    }

    function doNothing() {}

</script>